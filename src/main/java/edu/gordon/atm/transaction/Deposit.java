/* * ATM Example system - file Deposit.java    * * copyright (c) 2001 - Russell C. Bjork * */ package edu.gordon.atm.transaction;import edu.gordon.banking.AccountInformation;import edu.gordon.banking.Card;import edu.gordon.banking.Message;import edu.gordon.banking.Money;/** Representation for a deposit transaction */public class Deposit extends Transaction{    /** Constructor     *     *  @param edu.gordon.atm the ATM used to communicate with customer     *  @param session the session in which the transaction is being performed     *  @param card the customer's card     *  @param pin the PIN entered by the customer     */    public Deposit(Card card, int pin)    {        super(card, pin);    }        public boolean getNeedsFrom(){    	return false;    }        public boolean getNeedsTo(){    	return true;    }        public boolean getNeedsAmount(){    	return true;    }        public boolean getNeedsRoundAmount(){    	return false;    }        public int getMessageCode(){    	return Message.INITIATE_DEPOSIT;    }        public String getTransactionName(){    	return "DEPOSIT";    }        public String getVerb(){    	return "deposit";    }        public void setFrom(int from){    	//Do nothing    }        public void setTo(int to){    	this.to = to;    }        public void setAmount(Money amount){    	this.amount = amount;    }        /** Account to deposit to     */     private int to;        /** Amount of money to deposit     */    private Money amount;	public Message getSpecificsMessage() {		return new Message(Message.INITIATE_DEPOSIT,                card, pin, serialNumber, -1, to, amount);	}	@Override	public boolean getNeedsEnvelopeAcceptor() {		return true;	}	@Override	public boolean getNeedsCashDispenser() {		return false;	}	@Override	public boolean getNeedsToSendMessage() {		return true;	}	@Override	public Message getMessageToSend() {		return new Message(Message.COMPLETE_DEPOSIT, card, pin, serialNumber, -1, to, amount);	}	@Override	public String[] getReceiptDetails() {		String[] detailsPortion = new String[2];        detailsPortion[0] = "DEPOSIT TO: " +                             AccountInformation.ACCOUNT_ABBREVIATIONS[to];        detailsPortion[1] = "AMOUNT: " + amount.toString();		return detailsPortion;	}	@Override	public Money getAmount() {		return amount;	}            }
